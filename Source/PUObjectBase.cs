

using UnityEngine;


//
// Autogenerated by gaxb ( https://github.com/SmallPlanet/gaxb )
//

using System;
using System.Xml;
using System.Text;
using System.Reflection;
using System.Collections.Generic;
using System.Collections;
using System.Security;
using TB;

public partial class PUObject : PUObjectBase {

	public PUObject()
	{
	}
	

	public PUObject(
			string title,
			string tag,
			string tag1,
			string tag2,
			string tag3,
			string tag4,
			string tag5,
			string tag6 ) : this()
	{
		this.title = title;

		this.tag = tag;

		this.tag1 = tag1;

		this.tag2 = tag2;

		this.tag3 = tag3;

		this.tag4 = tag4;

		this.tag5 = tag5;

		this.tag6 = tag6;
	}

	

}




public class PUObjectBase : IPlanetUnity2 {




	public object parent;
	public string xmlns = "http://schema.smallplanet.com/PlanetUnity2";


	// XML Attributes
	public string raw_title;
	public string title;
	public string raw_tag;
	public string tag;
	public string raw_tag1;
	public string tag1;
	public string raw_tag2;
	public string tag2;
	public string raw_tag3;
	public string tag3;
	public string raw_tag4;
	public string tag4;
	public string raw_tag5;
	public string tag5;
	public string raw_tag6;
	public string tag6;



	// XML Sequences
	public List<object> children = new List<object>();
	


	public virtual void gaxb_unload()
	{

	}

	public void gaxb_addToParent()

	{
		if(parent != null)
		{
			FieldInfo parentField = parent.GetType().GetField("Object");
			List<object> parentChildren = null;

			if(parentField != null)
			{
				parentField.SetValue(parent, this);
			}
			else
			{
				parentField = parent.GetType().GetField("Objects");

				if(parentField != null)
				{
					parentChildren = (List<object>)(parentField.GetValue(parent));
				}
				else
				{
					parentField = parent.GetType().GetField("PlanetUnity2s");
					if(parentField != null)
					{
						parentChildren = (List<object>)(parentField.GetValue(parent));
					}
				}
				if(parentChildren == null)
				{
					FieldInfo childrenField = parent.GetType().GetField("children");
					if(childrenField != null)
					{
						parentChildren = (List<object>)childrenField.GetValue(parent);
					}
				}
				if(parentChildren != null)
				{
					parentChildren.Add(this);
				}

			}
		}
	}

	private string unescape(string s) {
		if (string.IsNullOrEmpty(s)) return s;

		string returnString = s;
		returnString = returnString.Replace("&amp;", "&");
		returnString = returnString.Replace("&apos;", "'");
		returnString = returnString.Replace("&quot;", "\"");
		returnString = returnString.Replace("&gt;", ">");
		returnString = returnString.Replace("&lt;", "<");
		return returnString;
	}

	public virtual void gaxb_loadattrs()
	{


		string attr;
		attr = raw_title;
		if(attr != null) { attr = PlanetUnityOverride.processString(this, parent, attr); }
		if(attr != null) { title = unescape(attr); } 
		
		attr = raw_tag;
		if(attr != null) { attr = PlanetUnityOverride.processString(this, parent, attr); }
		if(attr != null) { tag = unescape(attr); } 
		
		attr = raw_tag1;
		if(attr != null) { attr = PlanetUnityOverride.processString(this, parent, attr); }
		if(attr != null) { tag1 = unescape(attr); } 
		
		attr = raw_tag2;
		if(attr != null) { attr = PlanetUnityOverride.processString(this, parent, attr); }
		if(attr != null) { tag2 = unescape(attr); } 
		
		attr = raw_tag3;
		if(attr != null) { attr = PlanetUnityOverride.processString(this, parent, attr); }
		if(attr != null) { tag3 = unescape(attr); } 
		
		attr = raw_tag4;
		if(attr != null) { attr = PlanetUnityOverride.processString(this, parent, attr); }
		if(attr != null) { tag4 = unescape(attr); } 
		
		attr = raw_tag5;
		if(attr != null) { attr = PlanetUnityOverride.processString(this, parent, attr); }
		if(attr != null) { tag5 = unescape(attr); } 
		
		attr = raw_tag6;
		if(attr != null) { attr = PlanetUnityOverride.processString(this, parent, attr); }
		if(attr != null) { tag6 = unescape(attr); } 
		

	}

	public virtual void gaxb_load(TBXMLElement element, object _parent, Hashtable args)
	{

		if(element == null && _parent == null)
			return;

		parent = _parent;

		if(this.GetType() == typeof( PUObject ))
		{
			gaxb_addToParent();
		}

		//xmlns = element.GetAttribute("xmlns");

		raw_title = element.GetAttribute("title");		
		raw_tag = element.GetAttribute("tag");		
		raw_tag1 = element.GetAttribute("tag1");		
		raw_tag2 = element.GetAttribute("tag2");		
		raw_tag3 = element.GetAttribute("tag3");		
		raw_tag4 = element.GetAttribute("tag4");		
		raw_tag5 = element.GetAttribute("tag5");		
		raw_tag6 = element.GetAttribute("tag6");		
		gaxb_loadattrs();
	}







	public virtual void gaxb_appendXMLAttributes(StringBuilder sb)
	{

		if(title != null) { sb.AppendFormat (" {0}=\"{1}\"", "title", SecurityElement.Escape (title)); }
		if(tag != null) { sb.AppendFormat (" {0}=\"{1}\"", "tag", SecurityElement.Escape (tag)); }
		if(tag1 != null) { sb.AppendFormat (" {0}=\"{1}\"", "tag1", SecurityElement.Escape (tag1)); }
		if(tag2 != null) { sb.AppendFormat (" {0}=\"{1}\"", "tag2", SecurityElement.Escape (tag2)); }
		if(tag3 != null) { sb.AppendFormat (" {0}=\"{1}\"", "tag3", SecurityElement.Escape (tag3)); }
		if(tag4 != null) { sb.AppendFormat (" {0}=\"{1}\"", "tag4", SecurityElement.Escape (tag4)); }
		if(tag5 != null) { sb.AppendFormat (" {0}=\"{1}\"", "tag5", SecurityElement.Escape (tag5)); }
		if(tag6 != null) { sb.AppendFormat (" {0}=\"{1}\"", "tag6", SecurityElement.Escape (tag6)); }

	}

	public virtual void gaxb_appendXMLSequences(StringBuilder sb)
	{

		MethodInfo mInfo;		for(int i = 0; i < children.Count; i++) { object o = children[i]; mInfo = o.GetType().GetMethod("gaxb_appendXML"); if(mInfo != null) { mInfo.Invoke (o, new[] { sb }); } else { sb.AppendFormat ("<{0}>{1}</{0}>", "any", o); } }
	

	}

	public virtual void gaxb_appendXML(StringBuilder sb)
	{
		if(sb.Length == 0)
		{
			sb.AppendFormat ("<?xml version=\"1.0\" encoding=\"UTF-8\"?>");
		}

		sb.AppendFormat ("<{0}", "Object");

		if(xmlns != null) {
			if(parent == null) {
				sb.AppendFormat (" {0}=\"{1}\"", "xmlns", xmlns);
			}else{
				FieldInfo parentField = parent.GetType().GetField("xmlns");
				if(parentField != null && xmlns.Equals(parentField.GetValue(parent)) == false)
				{
					sb.AppendFormat (" {0}=\"{1}\"", "xmlns", xmlns);
				}
			}
		}

		gaxb_appendXMLAttributes(sb);


		StringBuilder seq = new StringBuilder();
		seq.AppendFormat(" ");
		gaxb_appendXMLSequences(seq);

		if(seq.Length == 1)
		{
			sb.AppendFormat (" />");
		}
		else
		{
			sb.AppendFormat (">{0}</{1}>", seq.ToString(), "Object");
		}
	}
}
